version: 2.1

executors:
  nodejs:
    docker:
      - image: circleci/node:11.11
    working_directory: ~/repo

commands:
  install-deps:
    steps:
      - run:
          name: Install Dependencies
          command: yarn install --frozen-lockfile --production=false
  restore-caches:
    steps:
      - restore_cache:
          name: Restore Yarn Package Cache
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
      - restore_cache:
          name: Restore node_modules Cache
          keys:
            - dependencies-{{ checksum "package.json" }}
  save-caches:
    steps:
      - save_cache:
          name: Save Yarn Package Cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn
      - save_cache:
          name: Save node_modules Cache
          paths:
            - node_modules
          key: dependencies-{{ checksum "package.json" }}
  build-project:
    steps:
      - run:
          name: Build Next.js Project
          command: yarn build
  clear-cloudflare-cache:
    steps:
      - run:
          environment:
            CLOUDFLARE_URL: https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache
          name: Purge cloudflare cache
          command: curl -X POST $CLOUDFLARE_URL -H "X-Auth-Email:$CLOUDFLARE_EMAIL" -H "X-Auth-Key:$CLOUDFLARE_GLOBAL_KEY" --header "Content-Type:application/json" --data '{"purge_everything":true}' > /dev/null
      - run:
          name: Waiting for cache to be purged
          command: sleep 35

jobs:
  build:
    executor: nodejs
    steps:
      - checkout
      - restore-caches
      - install-deps
      - save-caches
      - build-project
  clear-caches:
    machine: true
    steps:
      - clear-cloudflare-cache

workflows:
  build-deploy:
    jobs:
      - build
      - clear-caches
